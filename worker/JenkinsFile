pipeline{

    agent none

    stages{
        stage('build'){
	    agent {
       		docker{
            	    image 'maven:3.6.1-jdk-8-slim'
            	    args '-v dockervolume:/root/.m2'
        	}
    	    }
	    when{
                changeset "**/worker/**"
            }
            steps{
                echo "Hello! building worker"
		dir("worker"){
                    sh 'mvn compile'
		}
            }
        }
        stage('test'){
	    agent {
                docker{
                    image 'maven:3.6.1-jdk-8-slim'
                    args '-v dockervolume:/root/.m2'
                }
            } 
	    when{
                changeset "**/worker/**"
            }
            steps{
                echo "Hello! testing worker"
                dir("worker"){
		    sh 'mvn clean test'
		}
            }
        }
        stage('package'){
	    agent {
                docker{
                    image 'maven:3.6.1-jdk-8-slim'
                    args '-v dockervolume:/root/.m2'
                }
            } 
	    when{
                changeset "**/worker/**"
            }
            steps{
                echo "Hello! packaging worker"
                dir("worker"){
		    sh 'mvn package -DskipTests'
		    archiveArtifacts artifacts: '**/target/*.jar'
		}
            }
        }
	stage('docker-package'){
          agent any
          when{
            changeset "**/worker/**"
          }
          steps{
            echo 'Packaging vote app with docker'
            script{
              docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                  def voteImage = docker.build("bhanushalihitesh/worker:v${env.BUILD_ID}", "./vote")
                  voteImage.push()
                  voteImage.push("latest")
              }
            }
          }
      }
    }
    
    post{
        always{
            echo "This pipeline run is completed.."
        }
    }
}
